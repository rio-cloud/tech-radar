name,ring,quadrant,isNew,description
EsLint,adopt,tools,TRUE,
Sentry,adopt,tools,TRUE,"<a href=""https://sentry.io/welcome/"">Sentry</a> is an error monitoring solution. "
Zally,adopt,tools,TRUE,"<a href=""https://github.com/zalando/zally"">Zally</a> is a minimalistic (REST) API linter that in it's standard configuration lint againts the <a href=""http://zalando.github.io/restful-api-guidelines/"">Zalando's RESTful guidelines</a>. Zally's easy-to-use CLI uses the server in the background so that you can check your API on the spot. It also features an intuitive Web UI that shows implemented rules and lints external files and (with its online editor) API definitions."
Selenium,adopt,tools,TRUE,"<a href=""https://www.seleniumhq.org/"">Selenium</a> is a well supported standard for browser automation. Our cloud based browser test runner BrowserStack also relies on Selenium."
OpenAPI,adopt,tools,TRUE,"The <a href=""https://github.com/OAI/OpenAPI-Specification"">OpenAPI Specification</a> (formerly known as Swagger) is a community-driven open specification within the OpenAPI Initiative, a Linux Foundation Collaborative Project.

The OpenAPI Specification (OAS) defines a standard, programming language-agnostic interface description for REST APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what interface descriptions have done for lower-level programming, the OpenAPI Specification removes guesswork in calling a service."
BrowserStack,trial,tools,TRUE,"Browserstack has been introduced in 2017 to support IE browser tests and we only have one account right now, nobody feels responsible right now so this has been escalated to higher places to decide how to continue, which would include providing the teams with sufficient accounts to support their testing efforts."
DataDog,trial,tools,TRUE,"<a href=""https://www.datadoghq.com"">Datadog</a> is a managed monitoring solution, that can increase our observability capabilities with little engineering effort on our side. Tools like DataDog give the operational insight required for teams being able to run their own services. Our initial trial was successful without much hassle and teams liked the ease of use."
OpsGenie,trial,tools,TRUE,"<a href=""https://www.opsgenie.com/"">OpsGenie</a> is a modern incident management tool, that routes and consolidates alerts. On-call schedules, escalation strategies and means to alert can be defined."
pivio.io,assess,tools,TRUE,"<i><a href=""https://pivio.io"">pivio.io</a> is description in your source code with all the metadata of your service describing itself. This can be as simple as the name, owner and vcs information as well as useful information about runtime environment, used licenses and service dependencies.
Pivio is a service registry for humans.</i>"
Ranorex,hold,tools,TRUE,"<a href=""https://www.ranorex.com/"">Ranorex</a> is an UI test automation tool that is used by some teams. As its propriarity tool and the automation is done using .NET there is less of an ecosystem around it. In comparison the <a href=""https://www.seleniumhq.org/ecosystem/"">selenium ecosystem</a> lists alone 5 cloud based test runners. Teams should strongly consider Selenium based test automation, but there is currently no need to migrate existing tests away from Ranorex."
A single CI instance for all teams,hold,tools,TRUE,"A single CI instance and its configuration becomes a bottleneck and couples teams to a shared service. We want to rather support teams to own their CI. See also the <a href=""https://www.thoughtworks.com/radar/techniques/a-single-ci-instance-for-all-teams"">blip from TW</a>"
Self-hosted ELK,hold,tools,TRUE,We want to avoid the undifferentiated heavy lifting of operating our own logging and monitoring infrastructure and rather aim for a managed solution like DataDog.
Sonar theater,hold,tools,TRUE,"Measuring software internal quality is still a mystery, even though many source code metrics have been around for years. The problem with those metrics is they usually only capture one aspect of quality. We must consult many metrics to come to a conclusion about the overall quality of our code. Sonar is an integrated tool for checking, tracking and visualizing those metrics. It not only combines metrics together, but also mixes them with historical measures, giving us a better insight into the internal quality of the codebase. We, however, have seen mostly isses found and coverd which are not very important and code quality does not increase when code is written to just ""make sonar happy"". As a result we see unit tests for gettes/setters and similar methods for Java. It is significantly better to use a programming language which supports default implementations (e.g Kotlin or C#)."
Node.js,adopt,languages & frameworks,TRUE,"Node is an asynchronous event driven JavaScript runtime designed to build scalable network applications. There are a ton of libraries and frameworks available to use with node through npm and, usually, the community support is top notch. Currently node is used in multiple projects within RIO and especially within the marketplace. When comparing with java/spring, the development speed and lightweightedness is appreciated by the developer."
Python 3,adopt,languages & frameworks,TRUE,
Typescript,trial,languages & frameworks,TRUE,
Kotlin for backend,trial,languages & frameworks,TRUE,"<a href=""http://kotlinlang.org/"">Kotlin</a> has experienced an accelerated rate of adoption and rapid growth of tooling support. Some of the reasons behind its popularity are its concise syntax, null safety, ease of transition from Java and interoperability with other JVM-based languages in general, and that it doubles as a great introductory language to functional programming. With JetBrains adding the ability to compile Kotlin to native binarieson multiple platforms, as well as transpile to JavaScript, we believe it has the potential of much wider use by the larger community of mobile and native application developers. Although at the time of writing, some of the tooling such as static and coverage code analysis have yet to mature, given our experience of using Kotlin in many production applications, we believe Kotlin is ready for general adoption."
Spring Boot 2,trial,languages & frameworks,TRUE,"<a href=""https://spring.io/blog/2018/03/01/spring-boot-2-0-goes-ga"">Spring Boot</a> has been the main framework used for the microservices we have seen and thus upgrade to the new major version 2 seems to be the obvious choice. There are some significant changes which are targeted to support several state of the art concepts (Reactive programming, Kotlin support, Application metrics) in current development setups."
Elixir,assess,languages & frameworks,TRUE,"Elixir is a new dynamic, functional language designed for building scalable and maintainable applications. Elixir leverages the Erlang VM, known for running low-latency, distributed and fault-tolerant systems, while also being successfully used in web development and the embedded software domain."
Lagom,assess,languages & frameworks,TRUE,"Lagom is an open source microservices framework built on top of Akka and Play. Lagom helps developers build microservices as systems — Reactive systems, to be precise — so that the resulting microservices are elastic and resilient from within. Can be used with Java, Scala or Kotlin."
RxJava,assess,languages & frameworks,TRUE,"RxJava is an implementation of ReactiveX and reactive programming. There are many use cases for this paradigm, especially in stream processing. It has also proven to be helpful in Android development."
F#,assess,languages & frameworks,TRUE,"F# is a mature, open source, cross-platform, functional-first programming language. As it is not pure functional it might be a good choice to start a transition into a more functional development style."
Avro,hold,languages & frameworks,TRUE,"We decided not to use <a href=""https://avro.apache.org/"">Apache Avro</a> as serialization for messages in Kafka, but stick with JSON."
Adobe Experience Manager,adopt,platforms,TRUE,
Amazon Dynamo DB,adopt,platforms,TRUE,"For all services where the capabilities of DynamoDB are sufficient, we recommend to use it. It is a fully managed, highly scalable, low latency NoSQL database."
AWS Lambda,adopt,platforms,TRUE,
Kafka,adopt,platforms,TRUE,"Kafka is our central infrastructure, that powers our streaming, message bus, queueing and event sourcing needs. We decided for now against Kinesis and other use case specific services. Kafka should enable our event-driven architecture."
Kafka Streams,adopt,platforms,TRUE,"Kafka Streams is a client library for building applications and microservices, where the input and output data are stored in Kafka clusters. It combines the simplicity of writing and deploying standard Java and Scala applications on the client side with the benefits of Kafka's server-side cluster technology."
Amazon API Gateway,adopt,platforms,TRUE,"<i><a href=""https://aws.amazon.com/api-gateway/"">Amazon API Gateway</a></i> provides a fully-managed public endpoint for all our APIs. It offers monitoring, authorization and traffic management features like rate limiting and canary deployments. Each service should have its own Amazon API Gateway."
Amazon Aurora,adopt,platforms,TRUE,
Amazon Cognito,adopt,platforms,TRUE,"<i><a href=""https://aws.amazon.com/cognito/"">Amazon Cognito</a></i> is a managed identity provider that offers user sign-up and sign-in, multi-factor authentication, user federation with SAML and a lot more. We use it to save user credentials savely and integration with other identity providers (e.g. MAN service care)"
.NET Core,trial,platforms,TRUE,
AWS Fargate,trial,platforms,TRUE,"AWS Fargate is a recent entry into the docker-as-a-service space, currently limited to the US-East-1 region. For teams using AWS Elastic Container Service (ECS), AWS Fargate is a good alternative without having to manage, provision and configure any underlying EC2 instances or clusters. Fargate allows defining (ECS or EKS – ECS for Kubernetes) tasks as a Fargate type, and they will run on the AWS Fargate infrastructure. If you like the focus on business functionality that AWS Lambda gives you, Fargate is the closest you can get when applications can't be deployed as single functions."
Amazon Kinesis Data Streams,trial,platforms,TRUE,"Currently Kafka is used as our shared event bus, but for many use cases Kinesis is a viable alternative. It has less capabilities in comparison to Kafka, but is a fully managed service."
AWS Code Tools,trial,platforms,TRUE,"New deployments started to use AWS CodeBuild, CodePipeline and CodeDeploy as CI/CD tool chain. This allows, that the pipelines are created via code, that is part of the service repsository."
AWS IoT Core,trial,platforms,TRUE,We are investigating the viability of AWS IoT Core for our vehicle connectivity.
WSO2,hold,platforms,TRUE,"WSO2 is our current Identity Provider, Authorization Service and API Gateway, but we never managed to get our setup stable and scalable. As we lost trust in the system, we will migrate away from it and implement upcoming features with Amazon Cognito, Amazon API Gateway and a self-written authorization service."
Salesforce as system of records,hold,platforms,TRUE,
Spark Streaming,hold,platforms,TRUE,All our Spark Streaming solutions have been successfully replaced by Kafka Streams.
Serverless,adopt,techniques,TRUE,
Pairing/ code reviews,adopt,techniques,TRUE,"In order to further adopt XP practices, improve code quality and foster knowledge transfer within the team, we want to strengthen the introduction of pair programming and code reviews. Both options are viable, with pair programming beeing the preferred option."
Continuous Delivery,adopt,techniques,TRUE,"If you are wondering “What comes after agile?,” you should look towards continuous delivery. While your development processes may be fully optimized, it still might take your organization weeks or months to get a single change into production. Continuous delivery focuses on maximizing automation including infrastructure as code, environment management and deployment automation to ensure your system is always ready for production. It is about tightening your feedback loops and not putting off anything until the end. Continuous delivery is not the same as continuous deployment, which means deploying every change to production. Continuous delivery is not a cowboy show. It puts you in charge of your production environment. The business can pick and choose what and when to deploy. If you think you’ve nailed agile development, but aren’t considering how to achieve continuous delivery, you really haven’t even started."
Immutable data structures,adopt,techniques,TRUE,"A immutable data structure that always preserves the previous version of itself when it is modified, e.g. a list that cannot be changed. Instead of updating the list in-place, a new list is created. Immutability is an important building block in functional programming, but the idea is useful in all programming styles. Immutable objects are always thread-safe, their usage is side-effect free, they help avoiding temporal coupling and testing is ofter easier."
TDD + BDD,adopt,techniques,TRUE,"Test-driven development is a test-first approach to software development, that helps driving a simple, testable design and allows to work with more confidence. This method requires some practice and is often disregarded because of perceived productivity loses. The experience is often, that in combination with other XP practices it allows to keep a sustainable pace. BDD is an opinionated flavor of TDD that focuses even more on use of language and relating tests back to acceptance criteria. "
XP practices,adopt,techniques,TRUE,"Organizations introducing Scrum as an agile framework, often end up with the ceremonies and some management aspects of agile. Scrum has no opinion on engineering practices and often this gap is not activily addressed. To counter that, an active push towards XP practices is required."
API first,adopt,techniques,TRUE,"The idea of <a href=""https://www.programmableweb.com/api-university/understanding-api-first-design"">API first</a> is to develop the API together with the stakeholders before starting with the implementation. The benefit is to get feedback early and think more about the requirements for the API instead of the implementation details."
Resilience patterns,adopt,techniques,TRUE,"We are building a distributed system, that introduces new failure modes. We need to adopt <a href=""https://www.slideshare.net/ufried/resilience-reloaded-more-resilience-patterns"">Resilience patterns</a> to enable highly availability by reducing MTTR (mean time to recovery). "
Multi AWS accounts,adopt,techniques,TRUE,"To decouple our bounded contexts and to limit the blast radius, we are moving from a single production account to multiple accounts. One per bounded context."
"You build it, you run it",adopt,techniques,TRUE,The true meaning of DevOps. Teams have end-to-end responsibility for there services.
Trunk-based development,adopt,techniques,TRUE,"From <a href=""https://trunkbaseddevelopment.com/"">trunkbaseddevelopment.com</a>:</br>
<i>A source-control branching model, where developers collaborate on code in a single branch called ‘trunk’ or master, resist any pressure to create other long-lived development branches by employing documented techniques. They therefore avoid merge hell, do not break the build, and live happily ever after.</i>
</br>
Short-lived branches, that are merged within the day are allowed."
Threat Modeling,trial,techniques,TRUE,"From <a href=""https://www.thoughtworks.com/de/radar/techniques/threat-modeling"">TW Radar</a>:</br>
<i>Threat Modeling provides a set of techniques that help you identify and classify potential threats early in the development process. It is important to understand that it is only part of a strategy to stay ahead of threats. When used in conjunction with techniques such as establishing cross-functional security requirements to address common risks in the technologies a project uses and using automated security scanners, threat modeling can be a powerful asset.</i>"
SSO federated to AD,trial,techniques,TRUE,We want to avoid the work and securty risk of manual user management in services used by employees and instead federate all logins to our AD. 
Chaos engineering,trial,techniques,TRUE,"<a href=""https://principlesofchaos.org/"">Principles of Chaos Engineering</a></br>
<i>Chaos Engineering is the discipline of experimenting on a distributed system
in order to build confidence in the system’s capability
to withstand turbulent conditions in production.</i>
</br></br>
Our microservices architecture is inevitable a distributed system and controlled failure injection is a way that leads to building more resilient services. "
Reactive programming/ ReactiveX,assess,techniques,TRUE,"<a href=""https://en.wikipedia.org/wiki/Reactive_programming"">Reactive programming</a> and more specifically <a href=""http://reactivex.io/"">ReactiveX</a> is a programming paradigm and powerful abstraction for many problems. It is declarative and available for all major languages."
Consumer-driven contract testing,assess,techniques,TRUE,"<a href=""https://www.thoughtworks.com/de/radar/techniques/consumer-driven-contract-testing"">Consumer-driven contract testing</a> is technique, that has proven helpful verifying the integration of microservices. Pact is one framework that supports this approach."
GraphQL,assess,techniques,TRUE,"We do not intend to replace REST APIs with GraphQL, but it might be an option for aggregating existing APIs. For example as backend for frontends (BFF)."
Event Sourcing,assess,techniques,TRUE,"<a href=""https://docs.microsoft.com/en-us/azure/architecture/patterns/event-sourcing"">Event Sourcing</a> is a pattern that stores a record of events as source of truth. It is a complex pattern, that is helpful in complex domains. At is often used in conjunction with CQRS and matches an event-driven architecture."
CQRS,assess,techniques,TRUE,"<a href=""https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs"">CQRS - Command Query Responsibility Segregation</a> is a pattern that treats updating and reading operations differently. This in contrast to CRUD applications, where all operations are applied to the same entity. CQRS in conjunction with Event Sourcing is a very powerful, but complex pattern."
Sidecar pattern,assess,techniques,TRUE,"The <a href=""https://medium.com/netflix-techblog/prana-a-sidecar-for-your-netflix-paas-based-applications-and-services-258a5790a015"">sidecar pattern</a> was introduced by Netflix to push platform capabilities from shared libraries back into the infrastructure."
Multi-tenancy,assess,techniques,TRUE,"When testing in production, production data needs to be segregated from test data. This includes data generated by the tests. Also the data lake and tools like Google Analytics should not be affected. One option is, that all services follow the concept of a data sandbox, which is just a form of multi-tenancy. One tenant is production and additional tenants can be created for testing. This would also help with APIs for partners, which typically also require a tenant for testing."
Entity service,hold,techniques,TRUE,
MSRT,hold,techniques,TRUE,"As the runtime is mainly managed by AWS we don't want to have a separate team that acts as a gatekeeper for other teams. (Conflicts with multi-account strategy and ""you build it you run it"""
CoP theater,hold,techniques,TRUE,"Community of practices, that do not emphasize the community nor the practice part, can degrade into a one-way information sharing by a minority."
Layered architecture,hold,techniques,TRUE,Layered architecture is a good pattern for structuring larger services. We feel that a microservice should be small enough to not require that much internal structure. The friction introduced by internally layering a microservice should be avoided. Hexagonal architecture is a preferred internal architecture for microservices.
Scrum theater,hold,techniques,TRUE,"Scrum alone is not sufficient to become agile. All the ceremony does not help, when for example XP practices are left out. Scrum is deliberatly non descriptive with that regard, but it also should not be forgotten."