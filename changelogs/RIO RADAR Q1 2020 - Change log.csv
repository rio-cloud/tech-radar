name,Original Ring,New Ring,Original quadrant,New quadrant,isNew,description
AxonIQ,assess,adopt,languages & frameworks,,FALSE,"<a href=""https://axoniq.io/"">AxonIQ</a> is a framework that helps to build Event Sourcing applications using CQRS architecture pattern. It integrates well with Spring, supports relational databases or MongoDB as event store and has integration for Kafka. It helps to start solving problems with Event Sourcing instead of solving Event Sourcing problems providing solution to read model reacreation, different event handling strategies within or out of the transactional boundaries of the aggregate and much more. "
Mithril,assess,remove,languages & frameworks,,FALSE,"<a href=""https://mithril.js.org"">Mithril</a>is a modern client-side JavaScript framework for building Single Page Applications. It is like a lightweight react that is fully developed without these big movements in code like react 15 to 16. In many cases it is much faster and easier to handle as react. It works with nearly every tool that can be used with react but you don´t have to use specific frameworks / tools. For example the redux state can fully be used and the react components can be included in an own space."
Java,default,hold,languages & frameworks,,TRUE,"Kotlin should be used in favor of Java because it is an evolving technology that needs less boilerplate code on its usage and supports Java code and Libraries without problems that.
This reduce the amount the technologies being used at the same time in RIO."
JavaScript,default,hold,languages & frameworks,,TRUE,"Typescript should be used in favor of Javascript because of its advantages, e.g. type support and IDE integrations, and growing code base at RIO, making easier to share solutions and modules when using a common language."
Node.js for services,hold,remove/default,languages & frameworks,,FALSE,"<a href=""https://nodejs.org/en/about/"">Node</a> is an asynchronous event driven JavaScript runtime designed to build scalable network applications. There are a ton of libraries and frameworks available to use with node through npm and, usually, the community support is top notch. Currently node is used in multiple projects within RIO and especially within the marketplace.
We discourage starting new services with Node.js ,as we do not want to support and maintain a tech stack in addition to our JVM based one."
Spring Boot 1,hold,remove/default,languages & frameworks,,FALSE,"<a href=""https://spring.io/blog/2018/03/01/spring-boot-2-0-goes-ga"">Spring Boot</a> has been the main framework used for the microservices we have seen and thus upgrade to the new major version 2 seems to be the obvious choice. There are some significant changes which are targeted to support several state of the art concepts (Reactive programming, Kotlin support, Application metrics) in current development setups."
Coroutines,,assess,languages & frameworks,,TRUE,"One can think of a <a href=""https://kotlinlang.org/docs/reference/coroutines-overview.html"">coroutine</a> as a light-weight thread. Like threads, coroutines can run in parallel, wait for each other and communicate. The biggest difference is that coroutines are very cheap, almost free. Tt is possible to use Coroutines in the same way as a Promise/Deferred, where you function will resolve it at some point in the future, not blocking the main thread while waiting for the function to be resolved."
GraalVM,,assess,languages & frameworks,,TRUE,"<a href=""https://www.graalvm.org/"">GraalVM</a> is a polyglot VM from Oracle. It can be used as an replacement for the JVM to improve runtime performance of applications or to integrate different languages in the same application e.g. to use statistic capabilities of R within a Node.js application or to make use of good tooling (e.g. chrome debugger) of another programming language. One of the most interesting features is native image compilation."
Micronaut,,assess,languages & frameworks,,TRUE,"<a href=""https://micronaut.io/"">Micronaut</a> is a JVM based web framework for building microservices. It tries to avoid use of reflection in favor of annotation processing for performance reasons and better support of GraalVM. It allows to deploy the same application with an embedded application server or as serverless application. The eco system, which is constantly growing, provides modules for databases, messaging or web technnologies like OAuth."
React Testing Library,,assess,languages & frameworks,,TRUE,"The <a href=""https://testing-library.com/docs/react-testing-library/intro"">React Testing Library</a> is a very light-weight solution for testing React components. At RIO we use it to do frontend unit and integration tests without considering the Browser."
Amazon API Gateway,adopt,remove,platforms,,FALSE,"<i><a href=""https://aws.amazon.com/api-gateway/"">Amazon API Gateway</a></i> provides a fully-managed public endpoint for all our APIs. It offers monitoring, authorization and traffic management features like rate limiting and canary deployments. Each service should have its own Amazon API Gateway.
It should only be used by Lambdas if needed, but not for Services, where a Load balancer is more appropriate"
Amazon Athena,adopt,default,platforms,,FALSE,"<i><a href=""https://aws.amazon.com/de/athena/"">AWS Athena</a></i> is a managed Presto service. In combination with the AWS Glue Data Catalog it enables you to query S3 data with SQL. It supports CSV, JSON, ORC, Avro and Parquet. It is especially useful to do first data explorations."
Amazon Quicksight,adopt,default,platforms,,FALSE,"<i><a href=""https://aws.amazon.com/de/quicksight/"">AWS Quicksight</a></i> is a cloud based BI service. In an AWS environment it is lightweight and it is able to connect to S3, S3 via Athena, Redshift and many other data sources. Quicksight enables users to query data either with SQL or with a graphical tool. Results can be visualized on Dashboards."
AWS Code Tools,adopt,default,platforms,,FALSE,"New deployments started to use AWS CodeBuild, CodePipeline and CodeDeploy as CI/CD tool chain. This allows, that the pipelines are created via code, that is part of the service repsository."
AWS Fargate,adopt,default,platforms,,FALSE,"AWS Fargate is a recent entry into the docker-as-a-service space, currently limited to the US-East-1 region. For teams using AWS Elastic Container Service (ECS), AWS Fargate is a good alternative without having to manage, provision and configure any underlying EC2 instances or clusters. Fargate allows defining (ECS or EKS – ECS for Kubernetes) tasks as a Fargate type, and they will run on the AWS Fargate infrastructure. If you like the focus on business functionality that AWS Lambda gives you, Fargate is the closest you can get when applications can't be deployed as single functions."
AWS Glue ETL,adopt,default,platforms,,FALSE,"<i><a href=""https://aws.amazon.com/de/glue/"">AWS Glue</a></i> is a managed ETL service. It can be used to batch process data in reoccurring jobs. Under the hood Glue runs your code in Apache Spark."
Kafka Streams,adopt,remove,platforms,,FALSE,"Kafka Streams is a client library for building applications and microservices, where the input and output data are stored in Kafka clusters. It combines the simplicity of writing and deploying standard Java and Scala applications on the client side with the benefits of Kafka's server-side cluster technology."
.NET Core,hold,remove,platforms,,FALSE,We have far more experiences running JVM based workloads and we do not see any relevant advantage of the .NET ecosystem for us.
Adobe Experience Manager,hold,remove,platforms,,FALSE,"We use AEM as content management tool for the more static parts of our web presence. Content as part of our own applications are static resources in the respective repositories.
We are currently investigating more lightweight alternatives, that are closer to existing web development skills."
Amazon RDS,hold,remove,platforms,,FALSE,"Amazon RDS offers managed relational databases, where most operational tasks are taking care of. When your workload fits a relational database, please strongly recommend the more advanced Aurora offerings."
AWS Glue Data Catalog,trial,adopt,platforms,,FALSE,"<a href=""https://aws.amazon.com/de/glue/"">AWS Glue</a> provides besides a managed ETL service and also a data catalog. We use this data catalog to provide everyone at RIO an overview of the data that we have. The inferred schemata in the catalog can also be used to analyze the data."
Cloud watch for alarming,,trial,platforms,,TRUE,"CloudWatch alarms could be a replacement of our DataDog Monitors as metrics are faster available (forwarding to DataDog takes a while), the set up is simpler (only one system and not two) and CW alarms got some useful features in the past (e.g. math expressions or higher resolution). Neverthless, we should find out how it works together with OpsGenie as well as our DataDog dashboards."
Event bridge,,assess,platforms,,TRUE,"<a href=""https://aws.amazon.com/eventbridge/"">Amazon EventBridge</a> is a serverless event bus that makes it easy to connect applications together. Often, EventBridge is mentioned in combination with Software-as-a-Service (SaaS) applications, but we think the real power comes when it's used within your own applications. As it's a very new prodduct it should be watched closely. "
Continuous Delivery,adopt,default,techniques,,FALSE,"If you are wondering “What comes after agile?,” you should look towards continuous delivery. While your development processes may be fully optimized, it still might take your organization weeks or months to get a single change into production. Continuous delivery focuses on maximizing automation including infrastructure as code, environment management and deployment automation to ensure your system is always ready for production. It is about tightening your feedback loops and not putting off anything until the end. Continuous delivery is not the same as continuous deployment, which means deploying every change to production. Continuous delivery is not a cowboy show. It puts you in charge of your production environment. The business can pick and choose what and when to deploy. If you think you’ve nailed agile development, but aren’t considering how to achieve continuous delivery, you really haven’t even started."
Immutable data structures,adopt,remove,techniques,,FALSE,"A immutable data structure that always preserves the previous version of itself when it is modified, e.g. a list that cannot be changed. Instead of updating the list in-place, a new list is created. Immutability is an important building block in functional programming, but the idea is useful in all programming styles. Immutable objects are always thread-safe, their usage is side-effect free, they help avoiding temporal coupling and testing is ofter easier."
Multi AWS accounts,adopt,default,techniques,,FALSE,"To decouple our bounded contexts and to limit the blast radius, we are moving from a single production account to multiple accounts.  One AWS account per bounded context."
Serverless,adopt,default,techniques,,FALSE,"We want to avoid operating infrastructure ourself as much as possible, because we want to focus on writing code relevant for our business. Servless services from AWS are other service providers help with that.<br /><br />
Our decision to use Kafka instead of Kinesis is limiting are capability to embrace some serverless use cases.
See AWS Lambda description for more details"
Sidecar pattern,adopt,remove,techniques,,FALSE,"The <a href=""https://medium.com/netflix-techblog/prana-a-sidecar-for-your-netflix-paas-based-applications-and-services-258a5790a015"">sidecar pattern</a> was introduced by Netflix to push platform capabilities from shared libraries back into the infrastructure.
We are for example trying the DataDog agent as sidecar in Fargate."
Event Sourcing with DDB and Lambdas,assess,hold,techniques,,FALSE,"Using DynamoDB as event store and read models generated by Dynamo Stream Handlers (Lambdas) provide a lightweight, scalable & frameworkless way to implement event sourcing that is easy to understand and debug. This comes at a cost - you need to write more boilerplate / implement more things yourself than when using a framework."
GraphQL,assess,remove,techniques,,FALSE,"We do not intend to replace REST APIs with GraphQL, but it might be an option for aggregating existing APIs. For example as backend for frontends (BFF)."
Microfrontends,assess,adopt,techniques,,FALSE,"We evaluate a couple of different approaches for implementing micro frontends. Our goal is to enable teams to independendly deploy and maintain their frontends and be fully responsible for them (similar to what we do on the backend side with microservices). Currently we evaluate using single page apps per team with some commonly shared components, iframes and web components. Each of those approaches has it's own use case and makes sense in a certain setting. So far we tend to prefer a single page app per context and if we need to integrate context specific frontend parts in another context's frontend, we aim for cross-origin iframes, because they provide a clear separation of frontend clients on the authentication side."
Chaos engineering,trial,assess,techniques,,FALSE,"<a href=""https://principlesofchaos.org/"">Principles of Chaos Engineering</a><br />
<i>Chaos Engineering is the discipline of experimenting on a distributed system
in order to build confidence in the system’s capability
to withstand turbulent conditions in production.</i>
<br /><br />
Our microservices architecture is inevitable a distributed system and controlled failure injection is a way that leads to building more resilient services. "
CQRS,trial,adopt,techniques,,FALSE,"<a href=""https://martinfowler.com/bliki/CQRS.html"">CQRS - Command Query Responsibility Segregation</a> is an architectural pattern that implies using different models for updates and reads. A command is any method that mutates state and a query is any method that returns a value, but does not change state.<br />
CQRS allows, but does not require different persisted data models. This is in contrast to CRUD applications, where you use a single model.<br />
CQRS in conjunction with Event Sourcing and is a very powerful and complex pattern. See also Event Sourcing."
Event Sourcing,trial,adopt,techniques,,FALSE,"<a href=""https://docs.microsoft.com/en-us/azure/architecture/patterns/event-sourcing"">Event Sourcing</a> as an architectural pattern defines an approach to handling operations on data that's driven by a sequence of events which are recorded in an append-only store.<br />
Event Sourcing is typically used in conjunction CQRS and matches our event-driven architecture. It also brings technical and conceptual complexity, therefor usage of those patterns depends on the complexity of the problem to solve and the experience of the team.<br />
It allows you to reduce accidental complexity when working in a complex domain. Due to the event based history, it is possible to react to future changes in business requirements in a flexible way.<br />
When working with EventStorming or EventModelling the transition from design to implementation is possible with any transition.<br />
The above link contains a thourough <i>When to use this pattern</i> analysis."
Feature toggle service,trial,remove,techniques,,FALSE,"At some point in the mature of implementing feature toggles a feature toggle service is required. It enable toggles across deployable units and allows for more sophisticated use cases like A/B testing and canary releases. As we are still early in the adoption of feature toggles introducing the added value of a feature toggle service will also help with adoption. There are OSS and managed feature toggle services available. For example:
<br />
<a href=""https://github.com/Unleash/unleash"">Unleash (OSS)</a><br />
<a href=""https://launchdarkly.com/"">Launch Darkly (managed)</a><br />
<a href=""https://rollout.io/"">Rollout (managed)</a>"
Reactive programming/ ReactiveX in the backend,trial,remove,techniques,,FALSE,"<a href=""https://en.wikipedia.org/wiki/Reactive_programming"">Reactive programming</a> and more specifically <a href=""http://reactivex.io/"">ReactiveX</a> is a programming paradigm and powerful abstraction for many problems. It is declarative and available for all major languages."
Resilience patterns,trial,remove,techniques,,FALSE,"We are building a distributed system, that introduces new failure modes. We need to adopt <a href=""https://www.slideshare.net/ufried/resilience-reloaded-more-resilience-patterns"">Resilience patterns</a> to enable highly availability by reducing MTTR (mean time to recovery). "
4 key metrics,,adopt,techniques,,TRUE,"The published results in <a href=""https://itrevolution.com/book/accelerate/"">Accelerate</a> show a direct link between organizational performance and software delivery performance. It's only four key metricts that differentiate between low, medium and high performers: lead time, deployment frequency, mean time to restore (MTTR) and change fail rate."
Container Security Scanning,,trial,techniques,,TRUE,Container security scanning becomse more and more important and is also supported within ECR. We have to define how it could be integrated into our deployment pipelines and security processes.
Dependency License check,,adopt,techniques,,TRUE,"All Software projects should implement a Dependencies License check and periodically to identify if any of the project's dependencies have a license that should not used, avoiding legal issues."
Dependency Vulnerability check,,adopt,techniques,,TRUE,"All Software projects should implement a Dependencies Vulnerability check and periodically perform an analysis in the attempt to detect publicly disclosed vulnerabilities contained within a project’s dependencies, avoiding the usage of problematic dependencies."
Outbox pattern,,assess,techniques,,TRUE,"The <a href=""https://microservices.io/patterns/data/transactional-outbox.html"">Outbox Pattern</a> describes a solution to reliable publish events when working with database transaction. This pattern is particularly helpful for non-eventsourced applications. Ignoring the problem will lead to inconsistencies.<br />Combining this pattern with a commodity CDC solution like Debzium or AWS DMS could simplify the implementation."
OpenAPI,adopt,default,tools,,FALSE,"The <a href=""https://github.com/OAI/OpenAPI-Specification"">OpenAPI Specification</a> (formerly known as Swagger) is a community-driven open specification within the OpenAPI Initiative, a Linux Foundation Collaborative Project.
The OpenAPI Specification (OAS) defines a standard, programming language-agnostic interface description for REST APIs, which allows both humans and computers to discover and understand the capabilities of a service without requiring access to source code, additional documentation, or inspection of network traffic. When properly defined via OpenAPI, a consumer can understand and interact with the remote service with a minimal amount of implementation logic. Similar to what interface descriptions have done for lower-level programming, the OpenAPI Specification removes guesswork in calling a service."
AWS DocumentDB,assess,adopt,tools,,FALSE,"<a href=""https://aws.amazon.com/de/documentdb/"">DocumentDB</a> is a managed database from AWS, providing a MongoDB 3.6 compatible API. It has been announced early 2019. Compared to e.g. Mongo Altas is lives within your VPC which causes loer latencies. In addition AWS resource policies as well as IAM policies could be used for permission management. As with all young AWS products one could face come bugs or <a href=""https://www.mongodb.com/atlas-vs-amazon-documentdb"">missing features compared to MongoDB</a> such as geospatial indexes and some more."
CDK,assess,trial,tools,platforms,FALSE,"The <a href=""https://docs.aws.amazon.com/cdk/index.html"">AWS Cloud Development Kit (CDK)</a> is a software development framework for defining infrastructure as code imperatively in multiple languages. It uses CloudFormation to provision the infrastructure.

Compared to the declarative approach, CDK has a bit more complex setup, but offers many high level Constructs which abstracts away lot of details which leads to less lines of code. In addition, teams can build and share their own Constructs and benefit from others learnings."
Detekt,assess,adopt,tools,,FALSE,"<a href=""https://arturbosch.github.io/detekt/"">detekt</a> is a lightweight static code analyzer for Kotlin that helps to find code smells and track code complexity. It checks for Kotlin native language features, integrates well into CI/CD pipelines, there is an IntelliJ plugin for it, and can be used with Sonar."
Laconia,assess,remove,tools,,FALSE,"<a href=""https://laconiajs.io/"">Laconia</a>  Laconia is a microframework for building Node.js serverless function based applications."
Resilience4J,assess,trial,tools,,FALSE,"<a href=""https://github.com/resilience4j/resilience4j/"">Resilience4j</a>  Resilience4j is a lightweight fault tolerance library inspired by Netflix Hystrix, but designed for Java 8 and functional programming."
Snyk.io,assess,remove,tools,,FALSE,"<a href=""https://snyk.io/"">Snyk</a> is managed service to find and fix vulnerabilities in open source dependencies. We want to roll out an existing solution, rather than invest our engineering time. A central solution enables better reports and governance."
Ranorex,hold,remove,tools,,FALSE,"<a href=""https://www.ranorex.com/"">Ranorex</a> is an UI test automation tool that is used by some teams. As its propriarity tool and the automation is done using .NET there is less of an ecosystem around it. In comparison the <a href=""https://www.seleniumhq.org/ecosystem/"">selenium ecosystem</a> lists alone 5 cloud based test runners. Teams should strongly consider Selenium based test automation, but there is currently no need to migrate existing tests away from Ranorex."
Sonar theater,hold,remove,tools,,FALSE,"Measuring software internal quality is still a mystery, even though many source code metrics have been around for years. The problem with those metrics is they usually only capture one aspect of quality. We must consult many metrics to come to a conclusion about the overall quality of our code. Sonar is an integrated tool for checking, tracking and visualizing those metrics. It not only combines metrics together, but also mixes them with historical measures, giving us a better insight into the internal quality of the codebase. We, however, have seen mostly isses found and coverd which are not very important and code quality does not increase when code is written to just ""make sonar happy"". As a result we see unit tests for gettes/setters and similar methods for Java. It is significantly better to use a programming language which supports default implementations (e.g Kotlin or C#)."
Arrow,trial,trial,tools,,FALSE,"Arrow is a library for Typed Functional Programming in Kotlin. It includes very advanced concepts, but is also useful for everyone since it provides the most popular data types, type classes and abstractions such as Option, Try, Either, IO, Functor, Applicative and Monad."
cfn-lint,trial,remove,tools,,FALSE,"<a href=""https://github.com/aws-cloudformation/cfn-python-lint"">cfn-lint</a> is a JSON and YAML CloudFormation Validator checking against the CloudFormation spec and additional checks, including values for resource properties and best practices.<br>It can be used as a command line validator or added as a git pre-push hook to enforce validation."
MockK,trial,adopt,tools,,FALSE,"<a href=""https://mockk.io/"">MockK</a> is becoming the de-facto standard library for testing in Kotlin. It uses Kotlin native features to provide a nice DSL for, for example, stubbing and mocking, supports coroutines, and integrates well into Spring."
Custom Build Images,,hold,tools,,TRUE,"As custom build images always bear the risk to be outdated, we use the <a href=""https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html"">docker build images</a> provided by aws wherever possible."
Kotless,,assess,tools,,TRUE,"<a href=""https://site.kotless.io/"">Kotless</a> is a serverless framework for Kotlin. At RIO we decided that serverless for services with a rich domain logic is only an option if this is well supported by a framework. Kotless is one option for such a framework that we will have a look at."
Maven,,hold,tools,,TRUE,Gradle should be used in favor of Maven because it is more developer friendly due to it's programming language base instead of XML
owasp-dependency-check,,adopt,tools,,TRUE,"<a href=""https://owasp.org/www-project-dependency-check"">The OWASP Dependency-Check</a> 
is used to detect publicly disclosed vulnerabilities associated with the project's dependencies. It generates a report listing the dependency, any identified Common Platform Enumeration (CPE) identifiers, and the associated Common Vulnerability and Exposure (CVE) entries."
split.io,,trial,tools,,TRUE,"<a href=""https://www.split.io/"">Split</a> is managed service for feature toggles that should help us to separate code deployments from feature releases. It supports different rollout strategies and enables us to run data-driven experiments. We want to roll out an existing solution, rather than invest our engineering time in building one. "
Threat Modeling,trial,remove,techniques,,FALSE,"""From <a href=""""https://www.thoughtworks.com/de/radar/techniques/threat-modeling"""">TW Radar</a>:</br>
<i>Threat Modeling provides a set of techniques that help you identify and classify potential threats early in the development process. It is important to understand that it is only part of a strategy to stay ahead of threats. When used in conjunction with techniques such as establishing cross-functional security requirements to address common risks in the technologies a project uses and using automated security scanners, threat modeling can be a powerful asset.</i>"""