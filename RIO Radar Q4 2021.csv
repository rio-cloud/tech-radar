name,ring,quadrant,isNew,description
AxonIQ,adopt,languages & frameworks,FALSE,"<a href=""https://axoniq.io/"">AxonIQ</a> is a framework that helps to build Event Sourcing applications using CQRS architecture pattern. It integrates well with Spring, supports relational databases or MongoDB as event store and has integration for Kafka. It helps to start solving problems with Event Sourcing instead of solving Event Sourcing problems providing solution to read model reacreation, different event handling strategies within or out of the transactional boundaries of the aggregate and much more."
Blaze Persistence,trial,languages & frameworks,TRUE,"Blaze persistence makes writing advanced, complex JPA/SQL queries simpler. Its fluent API allows to easily build queries with subqueries, criteria, and projections. Its SQL-like query language and the possibility to use entity views makes it a better suited library than Spring Data JPA's abstractions. https //persistence.blazebit.com/index.html"
DependencyCruiser,trial,languages & frameworks,TRUE,"dependency-cruiser can be used to define and test the architecture of your front end application, avoid circular dependencies and identify unused modules. It is our preferred way to continuously test our architecture. It was already presented at the CoP Front end and was appreciated. However, only Team Transport Two has experience with it.https://github.com/sverweij/dependency-cruiser"
Embedded MySQL,trial,languages & frameworks,TRUE,"We are using an embedded MySql database for testing. It combines the best of two worlds - a real MySQL server, but without the extra overhead of docker. As soon as any MySQL-specific Syntax or Features are used, this avoids surprises on production (in contrast to tools like H2), or even makes it possible to test queries in the first place."
GraalVM,assess,languages & frameworks,TRUE,"<a href=""https://www.graalvm.org/"">GraalVM</a> is a high-performance JDK distribution designed to accelerate the execution of applications written in Java and other JVM languages along with support for JavaScript, Ruby, Python, and a number of other popular languages."
io-ts,adopt,languages & frameworks,TRUE,"Typescript prevents error by performing compile-time checks. Nevertheless, a lot of errors can happen during runtime, especially in SPAs when dealing with RESTFul responses. IO-Ts closes this gab by offering runtime validation for Typescript. (bearbeitet)"
JVM Native Images,assess,languages & frameworks,FALSE,"Native Image is a technology to ahead-of-time compile Java code to a standalone executable, called a native image. This executable includes the application classes, classes from its dependencies, runtime library classes, and statically linked native code from JDK. It does not run on the Java VM, but includes necessary components like memory management, thread scheduling, and so on from a different runtime system, called “Substrate VM”."
Kotlin for backend,adopt,languages & frameworks,FALSE,"<a href=""http://kotlinlang.org/"">Kotlin</a> has experienced an accelerated rate of adoption and rapid growth of tooling support. Some of the reasons behind its popularity are its concise syntax, null safety, ease of transition from Java and interoperability with other JVM-based languages in general, and that it doubles as a great introductory language to functional programming. With JetBrains adding the ability to compile Kotlin to native binarieson multiple platforms, as well as transpile to JavaScript, we believe it has the potential of much wider use by the larger community of mobile and native application developers. Although at the time of writing, some of the tooling such as static and coverage code analysis have yet to mature, given our experience of using Kotlin in many production applications, we believe Kotlin is ready for general adoption."
LocalDynamoDB,adopt,languages & frameworks,TRUE,"The LocalDynamoDB is a in-memory, sqlite based mock for the Amazon DynamoDB service. It is provided & maintained by Amazon. It allows to test DynamoDB-related code locally against the DynamoDB API, without the need for Docker or an AWS account. We consider it the standard tool at RIO for testing DynamoDB-related code. It is preferred over docker based solutions as the in memory solution is more light weight and takes less time to spin up."
projen,trial,languages & frameworks,TRUE,In team CLAID we're using it as it fits our CDK-based projects. Not sure if it's (yet) helpful for mixed language projects.
Renovate,trial,languages & frameworks,TRUE,"We do automated dependency updates using renovate via the dependency-bot account-module. This helps to prevent vulnerabilities and big ""version-jumps"". Depending on the criticality of the service and the confidence of the team we do these updates either with pull requests or fully automated."
TypeScript,adopt,languages & frameworks,FALSE,"<a href=""https://www.typescriptlang.org/"">Typescript</a> is a typed superset of JavaScript that compiles to plain JavaScript. We believe that the types (and the correspoding IDE support like autocompletion) helps us developers improving the code quality. Thus, Typescript is the recommended language when setting up a new frontend project."
Amazon DynamoDB Streams,adopt,platforms,TRUE,"A DynamoDB Stream is an order flow of information about changes to items in a DynamoDB Table. A Stream can be used as an input source for a Lambda function and enables Serverless, event driven development in near real time.
DynamoDB Streams could be used for different purposes. An example could be to generate domain events from database changes as the outbox pattern works best with transactional databases. Another use case might be to generate read models of the data."
Amazon RDS Aurora,adopt,platforms,FALSE,"Amazon RDS Aurora is our preferred option for relational databases. Aurora offers MySQL and PostgreSQL compatible databases with a new architecture optimized for distributed cloud environment.<br />
 Aurora Serverless flavor, however, is not meant for production workloads and thus should not be used. Therefore use the provisioned version"
Application Performance Monitoring (APM),adopt,platforms,TRUE,"Observability is a must-have in order to understand and operator distributed Cloud Systems. Correlating traces, logs and metrics enables you to understand your dependencies and reducing latency and eliminate errors."
AWS CDK,adopt,platforms,FALSE,"The <a href=""https://docs.aws.amazon.com/cdk/index.html"">AWS Cloud Development Kit (CDK)</a> is a software development framework for defining infrastructure as code imperatively in multiple languages. It uses CloudFormation to provision the infrastructure.
Compared to the declarative approach, CDK has a bit more complex setup, but offers many high level Constructs which abstracts away lot of details which leads to less lines of code. In addition, teams can build and share their own Constructs and benefit from others learnings."
AWS DocumentDB,adopt,platforms,FALSE,"<a href=""https://aws.amazon.com/de/documentdb/"">DocumentDB</a> is a managed database from AWS, providing a MongoDB compatible API. It has been announced early 2019. Compared to e.g. Mongo Altas is lives within your VPC which causes lower latencies. In addition AWS resource policies as well as IAM policies could be used for permission management. 
According to our Backup strategy we recommend to use DpocumentDB only for services with lower cirtitcality, as there is no popper way for cross AWS account backups of your data. So everything is lost in case you loose you account."
AWS ElastiCache,trial,platforms,TRUE,"Fully managed in-memory data store that is compatible with Redis and Memcached. Typically it's used as cache next to the database itself, to improve performance."
AWS Lambda,adopt,platforms,FALSE,"AWS Lambda should be used for infrastructure, delivery, streaming and continuous governance use cases. Everywhere where a tight integration with AWS APIs and almost no business logic is required.<br />
 We also tried Lambda functions as a replacement for containerized services with behavior. But we learned that the concepts and tooling are not there yet. The advantages of a serverless infrastructure are outweight by the disadvantage of not having a cohesive structure for the business logic.<br />"
Cloud watch for alarming,trial,platforms,FALSE,"CloudWatch alarms could be a replacement of our DataDog Monitors as metrics are faster available (forwarding to DataDog takes a while), the set up is simpler (only one system and not two) and CW alarms got some useful features in the past (e.g. math expressions or higher resolution). Neverthless, we should find out how it works together with OpsGenie as well as our DataDog dashboards."
Prowler,assess,platforms,TRUE,"Prowler is a security tool to perform AWS security best practices assessments, audits, incident response, continuous monitoring, hardening and forensics readiness. https://github.com/toniblyx/prowler"
API first,adopt,techniques,FALSE,"The idea of <a href=""https://www.programmableweb.com/api-university/understanding-api-first-design"">API first</a> is to develop the API together with the stakeholders before starting with the implementation. The benefit is to get feedback early and think more about the requirements for the API instead of the implementation details. For us the service interface includes published events which should go through the same design process."
API validation,assess,techniques,FALSE,"For API Validation, REST request and response or Kafka events, there are some automated solutions to enable validation during runtime or testing against an Open API spec.<br>For node it is possible to use <a href=""https://www.npmjs.com/package/express-openapi-validate"">express-openapi-validate</a>.<br>For Java/Kotlin it is possible to use <a href=""https://bitbucket.org/atlassian/swagger-request-validator/src/master/"">swagger-request-validator</a> that supports Swagger v2 and OpenAPI v3 specifications or <a href=""https://github.com/cdimascio/openapi-spring-webflux-validator"">openapi-spring-webflux-validator</a>.<br>It is also possible to automatically test our APIs by using <a href=""https://www.getpostman.com/collection"">Postman Collections</a> and it's command line test runner <a href=""https://learning.getpostman.com/docs/postman/collection_runs/command_line_integration_with_newman"">Newman</a>. For us it provides the advantage that we can easily import our OpenAPI files to Postman and easily put together all relevant use cases of our api while beeing able to add <a href=""https://learning.getpostman.com/docs/postman/scripts/pre_request_scripts"">pre-request logic</a> and <a href=""https://learning.getpostman.com/docs/postman/scripts/test_scripts""test scripts</a>. This also provides a nice way to document our api for users."
Architecture decision records,adopt,techniques,FALSE,"Important design and architecture decisions should be documented. This helps our future self to understand why and in what context those decisions where made and what where the consequences.<br /><br />Those lightweight architecture decision records should be kept in the same repository as the service affected by the decision. If the decision is on a bounded context level, it should be kept in a separate repository within the project of the context. Macro architecture decisions are kept in Confluence."
CQRS,adopt,techniques,FALSE,"<a href=""https://martinfowler.com/bliki/CQRS.html"">CQRS - Command Query Responsibility Segregation</a> is an architectural pattern that implies using different models for updates and reads. A command is any method that mutates state and a query is any method that returns a value, but does not change state.<br />
 CQRS allows, but does not require different persisted data models. This is in contrast to CRUD applications, where you use a single model.<br />
 CQRS in conjunction with Event Sourcing and is a very powerful and complex pattern. See also Event Sourcing."
Dependency License check,adopt,techniques,FALSE,"All Software projects should implement a Dependencies License check and periodically to identify if any of the project's dependencies have a license that should not used, avoiding legal issues."
Dependency Vulnerability check,adopt,techniques,FALSE,"All Software projects should implement a Dependencies Vulnerability check and periodically perform an analysis in the attempt to detect publicly disclosed vulnerabilities contained within a project’s dependencies, avoiding the usage of problematic dependencies."
Domain-Driven Design,adopt,techniques,FALSE,"<a href=""http://dddcommunity.org/"">Domain-Driven-Design</a> was first described by Eric Evans in 2004. It is an approach to software development for complex needs by connecting the implementation to an evolving model of the core buiseness concepts. The cpmplexity of the domain is supposed to be the most significant in most projects. Hence, the focus during the design process should be placed on the core domain and the domain logic. Additionally, DDD should initiate a creative and iterative collaboration between technical and domain experts to be able to understand the conceptual heart of complex problems."
Event Sourcing,adopt,techniques,FALSE,"<a href=""https://docs.microsoft.com/en-us/azure/architecture/patterns/event-sourcing"">Event Sourcing</a> as an architectural pattern defines an approach to handling operations on data that's driven by a sequence of events which are recorded in an append-only store.<br />
 Event Sourcing is typically used in conjunction CQRS and matches our event-driven architecture. It also brings technical and conceptual complexity, therefor usage of those patterns depends on the complexity of the problem to solve and the experience of the team.<br />
 It allows you to reduce accidental complexity when working in a complex domain. Due to the event based history, it is possible to react to future changes in business requirements in a flexible way.<br />
 When working with EventStorming or EventModelling the transition from design to implementation is possible with any transition.<br />
 The above link contains a thourough <i>When to use this pattern</i> analysis."
GameDays,trial,techniques,TRUE,"Quoted from https //aws.amazon.com/gameday/ GameDay is a collaborative learning exercise that tests skills in implementing AWS solutions to solve real-world problems in a gamified, risk-free environment. This is a completely hands-on opportunity for technical professionals to explore AWS services, architecture patterns, best practices, and group cooperation. (bearbeitet) Amazon Web Services, Inc.Amazon Web Services, Inc. AWS GameDay GameDay is a team learning exercise that tests skills in implementing AWS solutions to solve real-world problems in a gamified, risk-free environment. This is a completely hands-on opportunity to explore AWS services, architecture patterns, best practices, and group cooperation."
Hexagonal architecture,adopt,techniques,FALSE,"Hexagonal Architecture is a software design pattern, which fits well into Domain-Driven-Design approaches. It is also known as onion architecture, clean architecture or ports and adapters. The pattern describes a 2-dimensional layered architecture with the domain in its core, surrounded by application and framework layers. Objects (adapters) from outer layers can implement interfaces (ports) of inner layers but are not used directly. This architecture pattern helps separating the concerns of your application and focussing on the core domain for better maintainability and less technical debt."
Lean Prototyping,assess,techniques,TRUE,"Engineers tend to always strive for best possible solution.
However in early phases of the Software-Development-Lifecycle feedback from your customer is the most important thing. Therefore, there are cases where speed is more important than quality. 
Lean Prototyping means to take shortcuts, use boring technology and make technical debts - all for the goal to get early feedback from the customers fast. 
Of course this technique is no Silver-Bullet and does not apply to all kind of Prodcuts or Projects. "
Microfrontends,adopt,techniques,FALSE,"We evaluate a couple of different approaches for implementing micro frontends. Our goal is to enable teams to independendly deploy and maintain their frontends and be fully responsible for them (similar to what we do on the backend side with microservices). Currently we evaluate using single page apps per team with some commonly shared components, iframes and web components. Each of those approaches has it's own use case and makes sense in a certain setting. So far we tend to prefer a single page app per context and if we need to integrate context specific frontend parts in another context's frontend, we aim for cross-origin iframes, because they provide a clear separation of frontend clients on the authentication side."
Mobile first,trial,techniques,FALSE,"“Mobile first”, as the name suggests, means that you start the product design from the mobile end which has more restrictions. For example, the hover effect which is only supported by a cursor mouse or HD images & complex charts which only can be displayed when there is a recent bandwidth or screen resolution."
Multi-tenancy,trial,techniques,FALSE,"When testing in production, production data needs to be segregated from test data. This includes data generated by the tests. Also the data lake and tools like Google Analytics should not be affected. One option is, that all services follow the concept of a data sandbox, which is just a form of multi-tenancy. One tenant is production and additional tenants can be created for testing. This would also help with APIs for partners, which typically also require a tenant for testing."
Outbox pattern,trial,techniques,FALSE,"The <a href=""https://microservices.io/patterns/data/transactional-outbox.html"">Outbox Pattern</a> describes a solution to reliable publish events when working with database transaction. This pattern is particularly helpful for non-eventsourced applications. Ignoring the problem will lead to inconsistencies.<br />Combining this pattern with a commodity CDC solution like Debzium or AWS DMS could simplify the implementation."
Pairing/ code reviews,adopt,techniques,FALSE,"In order to further adopt XP practices, improve code quality and foster knowledge transfer within the team, we want to strengthen the introduction of pair programming and code reviews. Both options are viable, with pair programming beeing the preferred option."
Resilience Patterns,adopt,techniques,,"Resilience Patterns, adopt, Techniques, true, When building distributed applications, keep robustness in mind, where components can tolerate faults within their scope. Therefore, applying resilience patterns are recommended on external components the service relies on. The most known ones being: Circuit Breaker, Fallback, Timeout, Cache and Retry. Since there are many frameworks available, according to the technology used, the best suitable implementation should be decided by the developer team. We recommend Resilience4J as library of choice for implementing those."
Trunk-based development,adopt,techniques,FALSE,"From <a href=""https://trunkbaseddevelopment.com/"">trunkbaseddevelopment.com</a>:<br />
 <i>A source-control branching model, where developers collaborate on code in a single branch called ‘trunk’ or master, resist any pressure to create other long-lived development branches by employing documented techniques. They therefore avoid merge hell, do not break the build, and live happily ever after.</i>
 <br />
 Short-lived branches, that are merged within the day are allowed."
"You build it, you run it - light",adopt,techniques,FALSE,"YBIYRI is the true meaning of DevOps. The team not only writes the software, but owns the whole product lifecycle. Including the responsibility to deploy and operate the service. If a service owned by a team is hard to operate and creates many alerts, the team cannot offload that pain to somebody else. The intended behaviour is that the makes the service more resilient, reduces the number of alerts and makes them more actionable.<br /><br />
 As we currently cannot have on-call duties during non-office hours, we still want to close the feedback loop from production as much as possible. This is why we start with YBIYRI light, where the team takes on those responsibilities during office hours. As a result all capabilities and skills for proper YBIYRI needs to be in place."
Account Modules,adopt,tools,TRUE,"Account Modules are serverless applications, which are used to provide integrations e.g. for Bitbucket and Code Pipeline or common fuctionalities such as the permission listener module, which perists permissions from Kafka topic to DynamoDB. They are not consisdered as shared libraries, as the are encapsulated applications, which do not provide business logic. Account Modules are broadly used at RIO."
ArchUnit,adopt,tools,FALSE,"<a href=""https://www.archunit.org/"">ArchUnit</a> is test framework for Java (and Kotlin) applications that allows to test the architecture of an application. It is our preferred way to continuously test our architectures, e.g. hexagonal architectures."
AWS Config,adopt,tools,FALSE,AWS Config continuously monitor configuration changes of AWS resources and check them against compliance rules we define. It allows viewing organization-wide compliance reports and identifying non-compliant accounts and resources. We decided to use AWS managed solution instead of OSS solutions like CloudCustodian to avoid additional hosting and maintaining efforts.
BrowserStack,adopt,tools,FALSE,"Browserstack has been introduced in 2017 to support IE browser tests and we only have one account right now, nobody feels responsible right now so this has been escalated to higher places to decide how to continue, which would include providing the teams with sufficient accounts to support their testing efforts."
Corretto,adopt,tools,FALSE,Amazon Corretto is our favorite OpenJDK solution since we get a no-cost long-term supported distribute that receives security as well as performance enhancements. We discourage the usage of OracleJDK.
CypressIO,assess,tools,FALSE,"<a href=""https://www.cypress.io"">Cypress</a> is a frontend end-to-end testing tool that provides an alternative for Selenium. It claims to make setting up, writing and debugging tests easier, faster and more reliable than Selenium based tools."
Google Analytics,adopt,tools,TRUE,"Google Analytics itself is well known. At RIO we think, that it should be part of every SPA to gain insight about the user behaviour to improve the usability."
Jib,adopt,tools,FALSE,"<a href=""https://github.com/GoogleContainerTools/jib"">Jib</a> is able to build Docker Images for Java applications. Jib is daemonless and it separates your application into several image layers. That makes incremental builds possible. With proper caching in place, you are able to reduce your build time and to simplify your CI-system significantly. It is available as Maven and Gradle plugin."
OpsGenie,adopt,tools,FALSE,"<a href=""https://www.opsgenie.com/"">OpsGenie</a> is a modern incident management tool, that routes and consolidates alerts. On-call schedules, escalation strategies and means to alert can be defined."
owasp-dependency-check,adopt,tools,FALSE,"<a href=""https://owasp.org/www-project-dependency-check"">The OWASP Dependency-Check</a> 
 is used to detect publicly disclosed vulnerabilities associated with the project's dependencies. It generates a report listing the dependency, any identified Common Platform Enumeration (CPE) identifiers, and the associated Common Vulnerability and Exposure (CVE) entries."
PhraseApp,adopt,tools,FALSE,"<a href=""https://phraseapp.com/"">PhraseApp</a> is a global translation tool with the following functionalities:<ul><li>Central source where all translations are stored.</li><li>Translation Memory across all Teams/Projects.</li><li>Glossaries for stuff like error messages and definitions.</li><li>In-Context Machine translations for minor translation jobs.</li><li>Command Line Tool and more like 40 file formats.</li><li>Powerful API to fulfill developer needs.</li><li>The power of special PhraseApp tools like Autopilot and Smart Suggest.</li></ul>"
Resilience4J,adopt,tools,FALSE,"<a href=""https://github.com/resilience4j/resilience4j/"">Resilience4j</a> Resilience4j is a lightweight fault tolerance library inspired by Netflix Hystrix, but designed for Java 8 and functional programming."
Selenium,hold,tools,FALSE,"<a href=""https://www.seleniumhq.org/"">Selenium</a> is a well supported standard for browser automation. Our cloud based browser test runner BrowserStack also relies on Selenium."
Sentry,adopt,tools,FALSE,"<a href=""https://sentry.io/welcome/"">Sentry</a> is an error tracking solution, we use in our frontends."
split.io,adopt,tools,FALSE,"<a href=""https://www.split.io/"">Split</a> is managed service for feature toggles that should help us to separate code deployments from feature releases. It supports different rollout strategies and enables us to run data-driven experiments. We want to roll out an existing solution, rather than invest our engineering time in building one."
Zally,adopt,tools,FALSE,"<a href=""https://github.com/zalando/zally"">Zally</a> is a minimalistic (REST) API linter that in it's standard configuration lint againts the <a href=""http://zalando.github.io/restful-api-guidelines/"">Zalando's RESTful guidelines</a>. Zally's easy-to-use CLI uses the server in the background so that you can check your API on the spot. It also features an intuitive Web UI that shows implemented rules and lints external files and (with its online editor) API definitions.

As it has an overhead of running a docker image we don't use it in our CI/CD pipelines. We use it locally when designing new APIs and introducing bigger changes to API specifications."