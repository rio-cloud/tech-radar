name,quadrant,ring,isNew,description
AxonIQ,languages & frameworks,adopt,FALSE,"<a href=""https://axoniq.io/"">AxonIQ</a> is a framework that helps to build Event Sourcing applications using CQRS architecture pattern. It integrates well with Spring, supports relational databases or MongoDB as event store and has integration for Kafka. It helps to start solving problems with Event Sourcing instead of solving Event Sourcing problems providing solution to read model reacreation, different event handling strategies within or out of the transactional boundaries of the aggregate and much more. "
Coroutines,languages & frameworks,assess,TRUE,"One can think of a <a href=""https://kotlinlang.org/docs/reference/coroutines-overview.html"">coroutine</a> as a light-weight thread. Like threads, coroutines can run in parallel, wait for each other and communicate. The biggest difference is that coroutines are very cheap, almost free. Tt is possible to use Coroutines in the same way as a Promise/Deferred, where you function will resolve it at some point in the future, not blocking the main thread while waiting for the function to be resolved."
GraalVM,languages & frameworks,assess,TRUE,"<a href=""https://www.graalvm.org/"">GraalVM</a> is a polyglot VM from Oracle. It can be used as an replacement for the JVM to improve runtime performance of applications or to integrate different languages in the same application e.g. to use statistic capabilities of R within a Node.js application or to make use of good tooling (e.g. chrome debugger) of another programming language. One of the most interesting features is native image compilation."
Java,languages & frameworks,hold,TRUE,"Kotlin should be used in favor of Java because it is an evolving technology that needs less boilerplate code on its usage andÂ supports Java code and Libraries without problems that.
This reduce the amount the technologies being used at the same time in RIO."
JavaScript,languages & frameworks,hold,TRUE,"Typescript should be used in favor of Javascript because of its advantages, e.g. type support and IDE integrations, and growing code base at RIO, making easier to share solutions and modules when using a common language."
Kotlin for backend,languages & frameworks,adopt,FALSE,"<a href=""http://kotlinlang.org/"">Kotlin</a> has experienced an accelerated rate of adoption and rapid growth of tooling support. Some of the reasons behind its popularity are its concise syntax, null safety, ease of transition from Java and interoperability with other JVM-based languages in general, and that it doubles as a great introductory language to functional programming. With JetBrains adding the ability to compile Kotlin to native binarieson multiple platforms, as well as transpile to JavaScript, we believe it has the potential of much wider use by the larger community of mobile and native application developers. Although at the time of writing, some of the tooling such as static and coverage code analysis have yet to mature, given our experience of using Kotlin in many production applications, we believe Kotlin is ready for general adoption."
Micronaut,languages & frameworks,assess,TRUE,"<a href=""https://micronaut.io/"">Micronaut</a> is a JVM based web framework for building microservices. It tries to avoid use of reflection in favor of annotation processing for performance reasons and better support of GraalVM. It allows to deploy the same application with an embedded application server or as serverless application. The eco system, which is constantly growing, provides modules for databases, messaging or web technnologies like OAuth."
Python 3,languages & frameworks,adopt,FALSE,Simpler tasks for the command line as well as small Lambdas on AWS should when using Python use it in version 3 instead of 2.7. Do not use Python for services.
React Testing Library,languages & frameworks,assess,TRUE,"The <a href=""https://testing-library.com/docs/react-testing-library/intro"">React Testing Library</a> is a very light-weight solution for testing React components. At RIO we use it to do frontend unit and integration tests without considering the Browser."
Spring Boot 2,languages & frameworks,adopt,FALSE,"<a href=""https://spring.io/blog/2018/03/01/spring-boot-2-0-goes-ga"">Spring Boot</a> has been the main framework used for the microservices we have seen and thus upgrade to the new major version 2 seems to be the obvious choice. There are some significant changes which are targeted to support several state of the art concepts (Reactive programming, Kotlin support, Application metrics) in current development setups."
Typescript,languages & frameworks,adopt,FALSE,"<a href=""https://www.typescriptlang.org/"">Typescript</a> is a typed superset of JavaScript that compiles to plain JavaScript. We believe that the types (and the correspoding IDE support like autocompletion) helps us developers improving the code quality. Thus, Typescript is the recommended language when setting up a new frontend project."
Amazon Dynamo DB,platforms,adopt,FALSE,"For all services where the capabilities of DynamoDB are sufficient, we recommend to use it. It is a fully managed, highly scalable, low latency NoSQL database."
Amazon RDS Aurora,platforms,adopt,FALSE,"Amazon RDS Aurora is our preferred option for relational databases. Aurora offers MySQL and PostgreSQL compatible databases with a new architecture optimized for distributed cloud environment.<br />
Aurora Serverless flavor, however, is not meant for production workloads and thus should not be used. Therefore use the provisioned version"
AWS Glue Data Catalog,platforms,adopt,FALSE,"<a href=""https://aws.amazon.com/de/glue/"">AWS Glue</a> provides besides a managed ETL service and also a data catalog. We use this data catalog to provide everyone at RIO an overview of the data that we have. The inferred schemata in the catalog can also be used to analyze the data."
AWS Lambda,platforms,adopt,FALSE,"AWS Lambda should be used for infrastructure, delivery, streaming and continuous governance use cases. Everywhere where a tight integration with AWS APIs and almost no business logic is required.<br />
We also tried Lambda functions as a replacement for containerized services with behavior. But we learned that the concepts and tooling are not there yet. The advantages of a serverless infrastructure are outweight by the disadvantage of not having a cohesive structure for the business logic.<br />"
CDK,platforms,trial,FALSE,"The <a href=""https://docs.aws.amazon.com/cdk/index.html"">AWS Cloud Development Kit (CDK)</a> is a software development framework for defining infrastructure as code imperatively in multiple languages. It uses CloudFormation to provision the infrastructure.

Compared to the declarative approach, CDK has a bit more complex setup, but offers many high level Constructs which abstracts away lot of details which leads to less lines of code. In addition, teams can build and share their own Constructs and benefit from others learnings."
Cloud watch for alarming,platforms,trial,TRUE,"CloudWatch alarms could be a replacement of our DataDog Monitors as metrics are faster available (forwarding to DataDog takes a while), the set up is simpler (only one system and not two) and CW alarms got some useful features in the past (e.g. math expressions or higher resolution). Neverthless, we should find out how it works together with OpsGenie as well as our DataDog dashboards."
ECS on EC2,platforms,hold,FALSE,"You should run your ECS cluster with your own EC2 instances only when you need features that aren't supported by Fargate. And even in that case think about it. If you run your own EC2 instances, it's your responsibility to care about regular updates of the AMI and additional installed tools. It's also not trivial to scale the cluster automatically to run with as least resources as possible. And from a pure compute costs perspective, it's very hard to beat the latest price reduction of Fargate (<a href=""https://martinfowler.com/articles/feature-toggles.html"">More details</a> ). "
Event bridge,platforms,assess,TRUE,"<a href=""https://aws.amazon.com/eventbridge/"">Amazon EventBridge</a> is a serverless event bus that makes it easy to connect applications together. Often, EventBridge is mentioned in combination with Software-as-a-Service (SaaS) applications, but we think the real power comes when it's used within your own applications. As it's a very new prodduct it should be watched closely. "
4 key metrics,techniques,adopt,TRUE,"The published results in <a href=""https://itrevolution.com/book/accelerate/"">Accelerate</a> show a direct link between organizational performance and software delivery performance. It's only four key metricts that differentiate between low, medium and high performers: lead time, deployment frequency, mean time to restore (MTTR) and change fail rate."
API first,techniques,adopt,FALSE,"The idea of <a href=""https://www.programmableweb.com/api-university/understanding-api-first-design"">API first</a> is to develop the API together with the stakeholders before starting with the implementation. The benefit is to get feedback early and think more about the requirements for the API instead of the implementation details. For us the service interface includes published events which should go through the same design process."
API validation,techniques,assess,FALSE,"For API Validation, REST request and response or Kafka events, there are some automated solutions to enable validation during runtime or testing against an Open API spec.<br>For node it is possible to use <a href=""https://www.npmjs.com/package/express-openapi-validate"">express-openapi-validate</a>.<br>For Java/Kotlin it is possible to use <a href=""https://bitbucket.org/atlassian/swagger-request-validator/src/master/"">swagger-request-validator</a> that supports Swagger v2 and OpenAPI v3 specifications or <a href=""https://github.com/cdimascio/openapi-spring-webflux-validator"">openapi-spring-webflux-validator</a>.<br>It is also possible to automatically test our APIs by using <a href=""https://www.getpostman.com/collection"">Postman Collections</a> and it's command line test runner <a href=""https://learning.getpostman.com/docs/postman/collection_runs/command_line_integration_with_newman"">Newman</a>. For us it provides the advantage that we can easily import our OpenAPI files to Postman and easily put together all relevant use cases of our api while beeing able to add <a href=""https://learning.getpostman.com/docs/postman/scripts/pre_request_scripts"">pre-request logic</a> and <a href=""https://learning.getpostman.com/docs/postman/scripts/test_scripts""test scripts</a>. This also provides a nice way to document our api for users."
Architecture decision records,techniques,adopt,FALSE,"Important design and architecture decisions should be documented. This helps our future self to understand why and in what context those decisions where made and what where the consequences.<br /><br />Those lightweight architecture decision records should be kept in the same repository as the service affected by the decision. If the decision is on a bounded context level, it should be kept in a separate repository within the project of the context. Macro architecture decisions are kept in Confluence."
Chaos engineering,techniques,assess,FALSE,"<a href=""https://principlesofchaos.org/"">Principles of Chaos Engineering</a><br />
<i>Chaos Engineering is the discipline of experimenting on a distributed system
in order to build confidence in the systemâs capability
to withstand turbulent conditions in production.</i>
<br /><br />
Our microservices architecture is inevitable a distributed system and controlled failure injection is a way that leads to building more resilient services. "
Container Security Scanning,techniques,trial,TRUE,Container security scanning becomse more and more important and is also supported within ECR. We have to define how it could be integrated into our deployment pipelines and security processes.
CQRS,techniques,adopt,FALSE,"<a href=""https://martinfowler.com/bliki/CQRS.html"">CQRS - Command Query Responsibility Segregation</a> is an architectural pattern that implies using different models for updates and reads. A command is any method that mutates state and a query is any method that returns a value, but does not change state.<br />
CQRS allows, but does not require different persisted data models. This is in contrast to CRUD applications, where you use a single model.<br />
CQRS in conjunction with Event Sourcing and is a very powerful and complex pattern. See also Event Sourcing."
Dependency License check,techniques,adopt,TRUE,"All Software projects should implement a Dependencies License check and periodically to identify if any of the project's dependencies have a license that should not used, avoiding legal issues."
Dependency Vulnerability check,techniques,adopt,TRUE,"All Software projects should implement a Dependencies Vulnerability check and periodically perform an analysisÂ in theÂ attempt to detect publicly disclosed vulnerabilities contained within a projectâs dependencies, avoiding the usage of problematic dependencies."
Domain-Driven Design,techniques,adopt,FALSE,"<a href=""http://dddcommunity.org/"">Domain-Driven-Design</a> was first described by Eric Evans in 2004. It is an approach to software development for complex needs by connecting the implementation to an evolving model of the core buiseness concepts. The cpmplexity of the domain is supposed to be the most significant in most projects. Hence, the focus during the design process should be placed on the core domain and the domain logic. Additionally, DDD should initiate a creative and iterative collaboration between technical and domain experts to be able to understand the conceptual heart of complex problems."
Entity service,techniques,hold,FALSE,"Entity services are the attempt of decomposing a system into microservices following the nouns hence entities. At first glance they have all properties of proper microservices, but are completely missing the behavior part. You might end up with a service that supports CRUD via REST and all the behavior is pushed to the clients of the service. Use event storming and reason about event based data flow to define your microservices."
Event Sourcing,techniques,adopt,FALSE,"<a href=""https://docs.microsoft.com/en-us/azure/architecture/patterns/event-sourcing"">Event Sourcing</a> as an architectural pattern defines an approach to handling operations on data that's driven by a sequence of events which are recorded in an append-only store.<br />
Event Sourcing is typically used in conjunction CQRS and matches our event-driven architecture. It also brings technical and conceptual complexity, therefor usage of those patterns depends on the complexity of the problem to solve and the experience of the team.<br />
It allows you to reduce accidental complexity when working in a complex domain. Due to the event based history, it is possible to react to future changes in business requirements in a flexible way.<br />
When working with EventStorming or EventModelling the transition from design to implementation is possible with any transition.<br />
The above link contains a thourough <i>When to use this pattern</i> analysis."
Event Sourcing with DDB and Lambdas,techniques,hold,FALSE,"Using DynamoDB as event store and read models generated by Dynamo Stream Handlers (Lambdas) provide a lightweight, scalable & frameworkless way to implement event sourcing that is easy to understand and debug. This comes at a cost - you need to write more boilerplate / implement more things yourself than when using a framework."
Feature toggles,techniques,adopt,FALSE,"<a href=""https://martinfowler.com/articles/feature-toggles.html"">Feature toggles</a> are an import concept in continuous delivery. Release toggles decouple features releases from code deployments and enable trunk based development."
Hexagonal architecture,techniques,adopt,FALSE,"Hexagonal Architecture is a software design pattern, which fits well into Domain-Driven-Design approaches. It is also known as onion architecture, clean architecture or ports and adapters. The pattern describes a 2-dimensional layered architecture with the domain in its core, surrounded by application and framework layers. Objects (adapters) from outer layers can implement interfaces (ports) of inner layers but are not used directly. This architecture pattern helps separating the concerns of your application and focussing on the core domain for better maintainability and less technical debt."
Layered architecture,techniques,hold,FALSE,Layered architecture is a good pattern for structuring larger services. We feel that a microservice should be small enough to not require that much internal structure. The friction introduced by internally layering a microservice should be avoided. Hexagonal architecture is a preferred internal architecture for microservices.
Microfrontends,techniques,adopt,FALSE,"We evaluate a couple of different approaches for implementing micro frontends. Our goal is to enable teams to independendly deploy and maintain their frontends and be fully responsible for them (similar to what we do on the backend side with microservices). Currently we evaluate using single page apps per team with some commonly shared components, iframes and web components. Each of those approaches has it's own use case and makes sense in a certain setting. So far we tend to prefer a single page app per context and if we need to integrate context specific frontend parts in another context's frontend, we aim for cross-origin iframes, because they provide a clear separation of frontend clients on the authentication side."
Mobile first,techniques,trial,FALSE,"âMobile firstâ, as the name suggests, means that you start the product design from the mobile end which has more restrictions. For example, the hover effect which is only supported by a cursor mouse or HD images & complex charts which only can be displayed when there is a recent bandwidth or screen resolution."
Multi-tenancy,techniques,trial,FALSE,"When testing in production, production data needs to be segregated from test data. This includes data generated by the tests. Also the data lake and tools like Google Analytics should not be affected. One option is, that all services follow the concept of a data sandbox, which is just a form of multi-tenancy. One tenant is production and additional tenants can be created for testing. This would also help with APIs for partners, which typically also require a tenant for testing."
Outbox pattern,techniques,assess,TRUE,"The <a href=""https://microservices.io/patterns/data/transactional-outbox.html"">Outbox Pattern</a> describes a solution to reliable publish events when working with database transaction. This pattern is particularly helpful for non-eventsourced applications. Ignoring the problem will lead to inconsistencies.<br />Combining this pattern with a commodity CDC solution like Debzium or AWS DMS could simplify the implementation."
Pairing/ code reviews,techniques,adopt,FALSE,"In order to further adopt XP practices, improve code quality and foster knowledge transfer within the team, we want to strengthen the introduction of pair programming and code reviews. Both options are viable, with pair programming beeing the preferred option."
Proper bounded contexts,techniques,adopt,FALSE,"The bounded context is a core concept of Domain-Driven Design. It delimits the applicability of a particular model so that team members have a clear and shared understanding of what has to be consistent and how it relates to other contexts.<br /><br />
It is important to get the boundaries right and very helpful to enforce them in the architecture. We map the bounded contexts to AWS accounts, APIs and other conventions."
Scrum theater,techniques,hold,FALSE,"Scrum alone is not sufficient to become agile. All the ceremony does not help, when for example XP practices are left out. Scrum is deliberatly non descriptive with that regard, but it also should not be forgotten."
Shared libraries,techniques,hold,FALSE,"""Common"", ""General"" or similar sounding libraries should be avoided if they could not be opensourced since upgrading an (internal) common library is poarticularly complex to almost impossible."
SSO federated to AD,techniques,adopt,FALSE,We want to avoid the work and securty risk of manual user management in services used by employees and instead federate all logins to our AD. 
Trunk-based development,techniques,adopt,FALSE,"From <a href=""https://trunkbaseddevelopment.com/"">trunkbaseddevelopment.com</a>:<br />
<i>A source-control branching model, where developers collaborate on code in a single branch called âtrunkâ or master, resist any pressure to create other long-lived development branches by employing documented techniques. They therefore avoid merge hell, do not break the build, and live happily ever after.</i>
<br />
Short-lived branches, that are merged within the day are allowed."
"You build it, you run it - light",techniques,adopt,FALSE,"YBIYRI is the true meaning of DevOps. The team not only writes the software, but owns the whole product lifecycle. Including the responsibility to deploy and operate the service. If a service owned by a team is hard to operate and creates many alerts, the team cannot offload that pain to somebody else. The intended behaviour is that the makes the service more resilient, reduces the number of alerts and makes them more actionable.<br /><br />
As we currently cannot have on-call duties during non-office hours, we still want to close the feedback loop from production as much as possible. This is why we start with YBIYRI light, where the team takes on those responsibilities during office hours. As a result all capabilities and skills for proper YBIYRI needs to be in place."
A single CI instance for all teams,tools,hold,FALSE,"A single CI instance and its configuration becomes a bottleneck and couples teams to a shared service. We want to rather support teams to own their CI. See also the <a href=""https://www.thoughtworks.com/radar/techniques/a-single-ci-instance-for-all-teams"">blip from TW</a>"
ArchUnit,tools,adopt,FALSE,"<a href=""https://www.archunit.org/"">ArchUnit</a> is test framework for Java (and Kotlin) applications that allows to test the architecture of an application. It is our preferred way to continuously test our architectures, e.g. hexagonal architectures."
Arrow,tools,trial,FALSE,"Arrow is a library for Typed Functional Programming in Kotlin. It includes very advanced concepts, but is also useful for everyone since it provides the most popular data types, type classes and abstractions such as Option, Try, Either, IO, Functor, Applicative and Monad."
AWS Config,tools,adopt,FALSE,AWS Config continuously monitor configuration changes of AWS resources and check them against compliance rules we define. It allows viewing organization-wide compliance reports and identifying non-compliant accounts and resources. We decided to use AWS managed solution instead of OSS solutions like CloudCustodian to avoid additional hosting and maintaining efforts.
AWS DocumentDB,tools,adopt,FALSE,"<a href=""https://aws.amazon.com/de/documentdb/"">DocumentDB</a> is a managed database from AWS, providing a MongoDB 3.6 compatible API. It has been announced early 2019. Compared to e.g. Mongo Altas is lives within your VPC which causes loer latencies. In addition AWS resource policies as well as IAM policies could be used for permission management. As with all young AWS products one could face come bugs or <a href=""https://www.mongodb.com/atlas-vs-amazon-documentdb"">missing features compared to MongoDB</a> such as geospatial indexes and some more."
BrowserStack,tools,adopt,FALSE,"Browserstack has been introduced in 2017 to support IE browser tests and we only have one account right now, nobody feels responsible right now so this has been escalated to higher places to decide how to continue, which would include providing the teams with sufficient accounts to support their testing efforts."
Corretto,tools,adopt,FALSE,Amazon Corretto is our favorite OpenJDK solution since we get a no-cost long-term supported distribute that receives security as well as performance enhancements. We discourage the usage of OracleJDK.
Custom Build Images,tools,hold,TRUE,"As custom build images always bear the risk to be outdated, we use the <a href=""https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html"">docker build images</a> provided by aws wherever possible."
CypressIO,tools,assess,FALSE,"<a href=""https://www.cypress.io"">Cypress</a> is a frontend end-to-end testing tool that provides an alternative for Selenium. It claims to make setting up, writing and debugging tests easier, faster and more reliable than Selenium based tools."
Detekt,tools,adopt,FALSE,"<a href=""https://arturbosch.github.io/detekt/"">detekt</a> is a lightweight static code analyzer for Kotlin that helps to find code smells and track code complexity. It checks for Kotlin native language features, integrates well into CI/CD pipelines, there is an IntelliJ plugin for it, and can be used with Sonar."
Gradle,tools,adopt,FALSE,"<i><a href=""https://gradle.org/"">Gradle</a></i> is a build-management and automation tool it can be used to build and deploy application code as well as infrastructure. Gradle supports build scripts  written in Groovy or Kotlin, which makes them very powerful and flexible."
Jib,tools,adopt,FALSE,"<a href=""https://github.com/GoogleContainerTools/jib"">Jib</a> is able to build Docker Images for Java applications. Jib is daemonless and it separates your application into several image layers. That makes incremental builds possible. With proper caching in place, you are able to reduce your build time and to simplify your CI-system significantly. It is available as Maven and Gradle plugin."
Kotless,tools,assess,TRUE,"<a href=""https://site.kotless.io/"">Kotless</a> is a serverless framework for Kotlin. At RIO we decided that serverless for services with a rich domain logic is only an option if this is well supported by a framework. Kotless is one option for such a framework that we will have a look at."
Maven,tools,hold,TRUE,Gradle should be used in favor of Maven because it is more developer friendly due to it's programming language base instead of XML
MockK,tools,adopt,FALSE,"<a href=""https://mockk.io/"">MockK</a> is becoming the de-facto standard library for testing in Kotlin. It uses Kotlin native features to provide a nice DSL for, for example, stubbing and mocking, supports coroutines, and integrates well into Spring."
OpsGenie,tools,adopt,FALSE,"<a href=""https://www.opsgenie.com/"">OpsGenie</a> is a modern incident management tool, that routes and consolidates alerts. On-call schedules, escalation strategies and means to alert can be defined."
Oracle JDK,tools,hold,FALSE,Oracle has stopped to freely distribute the Oracle JDK for production usage from January 2018. OpenJDK has become the industry favorite. Since we are deploying our Java Docker containers to ECS we favor the Amazon Corretto distribution as our OpenJDK base image.
owasp-dependency-check,tools,adopt,TRUE,"<a href=""https://owasp.org/www-project-dependency-check"">The OWASP Dependency-Check</a> 
is used to detect publicly disclosed vulnerabilities associated with the project's dependencies. It generates a report listing the dependency, any identified Common Platform Enumeration (CPE) identifiers, and the associated Common Vulnerability and Exposure (CVE) entries."
PhraseApp,tools,adopt,FALSE,"<a href=""https://phraseapp.com/"">PhraseApp</a> is a global translation tool with the following functionalities:<ul><li>Central source where all translations are stored.</li><li>Translation Memory across all Teams/Projects.</li><li>Glossaries for stuff like error messages and definitions.</li><li>In-Context Machine translations for minor translation jobs.</li><li>Command Line Tool and more like 40 file formats.</li><li>Powerful API to fulfill developer needs.</li><li>The power of special PhraseApp tools like Autopilot and Smart Suggest.</li></ul>"
Resilience4J,tools,trial,FALSE,"<a href=""https://github.com/resilience4j/resilience4j/"">Resilience4j</a>  Resilience4j is a lightweight fault tolerance library inspired by Netflix Hystrix, but designed for Java 8 and functional programming."
Selenium,tools,adopt,FALSE,"<a href=""https://www.seleniumhq.org/"">Selenium</a> is a well supported standard for browser automation. Our cloud based browser test runner BrowserStack also relies on Selenium."
Sentry,tools,adopt,FALSE,"<a href=""https://sentry.io/welcome/"">Sentry</a> is an error tracking solution, we use in our frontends."
split.io,tools,trial,TRUE,"<a href=""https://www.split.io/"">Split</a> is managed service for feature toggles that should help us to separate code deployments from feature releases. It supports different rollout strategies and enables us to run data-driven experiments. We want to roll out an existing solution, rather than invest our engineering time in building one. "
Zally,tools,adopt,FALSE,"<a href=""https://github.com/zalando/zally"">Zally</a> is a minimalistic (REST) API linter that in it's standard configuration lint againts the <a href=""http://zalando.github.io/restful-api-guidelines/"">Zalando's RESTful guidelines</a>. Zally's easy-to-use CLI uses the server in the background so that you can check your API on the spot. It also features an intuitive Web UI that shows implemented rules and lints external files and (with its online editor) API definitions."